#!/usr/bin/python
#
# Author: Huanglin "Lincoln" Xiong
# Email: hxiong@wpi.edu
# Version: Sep 2014

import subprocess, sys, os, optparse
from lib.History import History
from lib import Harness

def main():
    p = optparse.OptionParser(description='Initialize the harness.'
        'Swiped out all results and history so we have a "pure" harness '
        'environment.')
    options, arguments = p.parse_args()
    # create directories for the test/history/results
    subprocess.call(["mkdir", "-p", "test", "history", "results"])
    subprocess.call(["mkdir", "-p", "test/new", "test/unclassified", "test/passed", \
            "test/failed", "test/inactive"])
    subprocess.call(["mkdir", "-p", "results/failed", "results/passed", \
            "results/unclassified"])
    # remove and recreate test_tag file
    subprocess.call(["rm", ".test_tag"])
    subprocess.call(["touch", ".test_tag"])
    
    # swiped out all results and history
    Harness.swipeHistory(os.getcwd())
    Harness.swipeResults(os.getcwd())
    Harness.initTestFile(os.getcwd())
    
    # add right to access the command
    for f in os.listdir("./"):
        if "harness-" in f:
            subprocess.call(["chmod", "+x", f])
    
    # init history
    h = History("INIT")
    h.initFile()

if __name__ == '__main__':
    main()
